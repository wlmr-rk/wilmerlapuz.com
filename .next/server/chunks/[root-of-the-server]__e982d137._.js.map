{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 164, "column": 0}, "map": {"version":3,"sources":["file:///home/wlmr/Code/myWebsite/src/app/api/contact/route.ts"],"sourcesContent":["// src/app/api/contact/route.ts\nimport { NextRequest, NextResponse } from \"next/server\";\nimport { Resend } from \"resend\";\nimport { sql } from \"@vercel/postgres\"; // Use the Vercel Postgres SDK\n\n// Instantiate Resend with your API key\nconst resend = new Resend(process.env.RESEND_API_KEY);\nconst TO_EMAIL = \"wilmer.lapuz@gmail.com\";\nconst FROM_EMAIL = \"onboarding@resend.dev\"; // Resend's default for testing\n\nexport async function POST(req: NextRequest) {\n  try {\n    const body = await req.json();\n    const { name, email, company, subject, message } = body;\n\n    // Basic validation\n    if (!name || !email || !subject || !message) {\n      return NextResponse.json(\n        { error: \"Missing required fields\" },\n        { status: 400 },\n      );\n    }\n\n    // --- 1. SAVE TO DATABASE ---\n    // The `sql` template is sanitized against SQL injection.\n    try {\n      await sql`\n        INSERT INTO contact_submissions (name, email, company, subject, message)\n        VALUES (${name}, ${email}, ${company}, ${subject}, ${message});\n      `;\n    } catch (dbError) {\n      console.error(\"Database Error:\", dbError);\n      // Return a server error if the database write fails\n      return NextResponse.json(\n        { error: \"Failed to save submission to the database.\" },\n        { status: 500 },\n      );\n    }\n\n    // --- 2. SEND EMAIL NOTIFICATION ---\n    // This part only runs if the database write was successful.\n    const { error: emailError } = await resend.emails.send({\n      from: `Portfolio Contact <${FROM_EMAIL}>`,\n      to: [TO_EMAIL],\n      replyTo: email,\n      subject: `New Portfolio Contact: ${subject}`,\n      text: `New submission saved to database.\n---\nName: ${name}\nEmail: ${email}\nCompany: ${company || \"Not provided\"}\nSubject: ${subject}\n---\nMessage:\n${message}\n      `,\n    });\n\n    if (emailError) {\n      console.error(\"Resend API Error:\", emailError);\n      // Important: The data IS in the database, but the email failed.\n      // This is still a partial success.\n      return NextResponse.json(\n        { message: \"Submission saved, but email notification failed.\" },\n        { status: 207 }, // 207 Multi-Status is a good code for this\n      );\n    }\n\n    // --- 3. SEND SUCCESS RESPONSE ---\n    return NextResponse.json({\n      message: \"Submission successful!\",\n    });\n  } catch (err) {\n    console.error(\"API Route Error:\", err);\n    const errorMessage =\n      err instanceof Error ? err.message : \"An unknown error occurred\";\n    return NextResponse.json({ error: errorMessage }, { status: 500 });\n  }\n}\n"],"names":[],"mappings":"AAAA,+BAA+B;;;;AAC/B;AACA;AACA,sUAAwC,8BAA8B;AAAtE;;;;AAEA,uCAAuC;AACvC,MAAM,SAAS,IAAI,0IAAA,CAAA,SAAM,CAAC,QAAQ,GAAG,CAAC,cAAc;AACpD,MAAM,WAAW;AACjB,MAAM,aAAa,yBAAyB,+BAA+B;AAEpE,eAAe,KAAK,GAAgB;IACzC,IAAI;QACF,MAAM,OAAO,MAAM,IAAI,IAAI;QAC3B,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,GAAG;QAEnD,mBAAmB;QACnB,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,WAAW,CAAC,SAAS;YAC3C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAA0B,GACnC;gBAAE,QAAQ;YAAI;QAElB;QAEA,8BAA8B;QAC9B,yDAAyD;QACzD,IAAI;YACF,MAAM,mLAAA,CAAA,MAAG,CAAC;;gBAEA,EAAE,KAAK,EAAE,EAAE,MAAM,EAAE,EAAE,QAAQ,EAAE,EAAE,QAAQ,EAAE,EAAE,QAAQ;MAC/D,CAAC;QACH,EAAE,OAAO,SAAS;YAChB,QAAQ,KAAK,CAAC,mBAAmB;YACjC,oDAAoD;YACpD,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAA6C,GACtD;gBAAE,QAAQ;YAAI;QAElB;QAEA,qCAAqC;QACrC,4DAA4D;QAC5D,MAAM,EAAE,OAAO,UAAU,EAAE,GAAG,MAAM,OAAO,MAAM,CAAC,IAAI,CAAC;YACrD,MAAM,CAAC,mBAAmB,EAAE,WAAW,CAAC,CAAC;YACzC,IAAI;gBAAC;aAAS;YACd,SAAS;YACT,SAAS,CAAC,uBAAuB,EAAE,SAAS;YAC5C,MAAM,CAAC;;MAEP,EAAE,KAAK;OACN,EAAE,MAAM;SACN,EAAE,WAAW,eAAe;SAC5B,EAAE,QAAQ;;;AAGnB,EAAE,QAAQ;MACJ,CAAC;QACH;QAEA,IAAI,YAAY;YACd,QAAQ,KAAK,CAAC,qBAAqB;YACnC,gEAAgE;YAChE,mCAAmC;YACnC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,SAAS;YAAmD,GAC9D;gBAAE,QAAQ;YAAI;QAElB;QAEA,mCAAmC;QACnC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YACvB,SAAS;QACX;IACF,EAAE,OAAO,KAAK;QACZ,QAAQ,KAAK,CAAC,oBAAoB;QAClC,MAAM,eACJ,eAAe,QAAQ,IAAI,OAAO,GAAG;QACvC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAa,GAAG;YAAE,QAAQ;QAAI;IAClE;AACF","debugId":null}}]
}